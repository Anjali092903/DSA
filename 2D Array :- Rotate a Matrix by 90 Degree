Rotate a Matrix by 90 Degree
You are given a n x n 2-D matrix representing an image, rotate the image by 90 degrees (clockwise).

Input Format
The first line will contain two integers n and n again.

The next n lines contain n integers each representing the matrix.

Output Format
Print a matrix that is rotated by 90 degrees in the clockwise direction.

Example 1
Input

2 2 
1 2
2 3 
Output

2 1 
3 2
Explanation

We do a 90 degree clockwise rotation of the matrix.



import java.io.*;
import java.util.*;

class Solution {

    // Method to transpose the matrix (rows become columns and columns become rows)
    public int[][] matrixTranspose(int[][] arr, int n) {
        // Using diagonal approach to transpose matrix in place
        for (int dig = 0; dig < arr.length; dig++) {
            int i = 0;
            int j = dig;
            // Swapping elements above the diagonal with their counterparts
            while (j < arr.length) {
                int temp = arr[i][j];
                arr[i][j] = arr[j][i];
                arr[j][i] = temp;
                i++;
                j++;      
            }
        }
        return arr;
    }

    // Method to rotate matrix by 90 degrees clockwise
    public void rotateBy90(int[][] mat) {
        // Step 1: Transpose the matrix
        mat = matrixTranspose(mat, mat.length);
        
        // Step 2: Reverse each row (equivalent to rotating by 90 degrees clockwise)
        for (int row = 0; row < mat.length; row++) {
            int st = 0; // Start index of the row
            int en = mat.length - 1; // End index of the row
            // Reverse the row by swapping elements at the start and end
            while (st < en) {
                int temp = mat[row][st];
                mat[row][st] = mat[row][en];
                mat[row][en] = temp;
                st++;
                en--;
            }
        }

        // Step 3: Print the rotated matrix
        for (int row = 0; row < mat.length; row++) {
            for (int col = 0; col < mat[0].length; col++) {
                System.out.print(mat[row][col] + " "); // Print the matrix row-wise
            }
            System.out.println(); // Print a new line after each row
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, m;
        n = sc.nextInt(); // Input matrix size (n rows)
        m = sc.nextInt(); // Input matrix size (m columns, which will be same as n)
        
        // Initialize the matrix
        int[][] mat = new int[n][m];
        
        // Input the matrix elements
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                mat[i][j] = sc.nextInt();
            }
        }
        
        // Create an instance of the Solution class
        Solution Obj = new Solution();
        
        // Rotate the matrix by 90 degrees clockwise and print it
        Obj.rotateBy90(mat);
        
        System.out.println('\n'); // Print a new line after the rotated matrix
    }
}
